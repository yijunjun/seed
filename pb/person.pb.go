// Code generated by protoc-gen-go. DO NOT EDIT.
// source: person.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	person.proto
	person_service.proto
	story.proto

It has these top-level messages:
	Person
	PersonList
	IdRequest
	IdListRequest
	NameListRequest
	Story
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Person struct {
	// 注释范例
	Id         int64            `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name       string           `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Sex        bool             `protobuf:"varint,3,opt,name=sex" json:"sex,omitempty"`
	Age        int32            `protobuf:"varint,4,opt,name=age" json:"age,omitempty"`
	Money      float32          `protobuf:"fixed32,5,opt,name=money" json:"money,omitempty"`
	Attach     []byte           `protobuf:"bytes,6,opt,name=attach,proto3" json:"attach,omitempty"`
	JoinTime   int64            `protobuf:"varint,7,opt,name=joinTime" json:"joinTime,omitempty"`
	Rate       float64          `protobuf:"fixed64,8,opt,name=rate" json:"rate,omitempty"`
	Storys     []*Story         `protobuf:"bytes,9,rep,name=storys" json:"storys,omitempty"`
	HeadImgUrl string           `protobuf:"bytes,10,opt,name=headImgUrl" json:"headImgUrl,omitempty"`
	Friends    map[int32]string `protobuf:"bytes,11,rep,name=friends" json:"friends,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Person) Reset()                    { *m = Person{} }
func (m *Person) String() string            { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()               {}
func (*Person) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Person) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetSex() bool {
	if m != nil {
		return m.Sex
	}
	return false
}

func (m *Person) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Person) GetMoney() float32 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *Person) GetAttach() []byte {
	if m != nil {
		return m.Attach
	}
	return nil
}

func (m *Person) GetJoinTime() int64 {
	if m != nil {
		return m.JoinTime
	}
	return 0
}

func (m *Person) GetRate() float64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *Person) GetStorys() []*Story {
	if m != nil {
		return m.Storys
	}
	return nil
}

func (m *Person) GetHeadImgUrl() string {
	if m != nil {
		return m.HeadImgUrl
	}
	return ""
}

func (m *Person) GetFriends() map[int32]string {
	if m != nil {
		return m.Friends
	}
	return nil
}

type PersonList struct {
	Items []*Person `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *PersonList) Reset()                    { *m = PersonList{} }
func (m *PersonList) String() string            { return proto.CompactTextString(m) }
func (*PersonList) ProtoMessage()               {}
func (*PersonList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PersonList) GetItems() []*Person {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*Person)(nil), "pb.Person")
	proto.RegisterType((*PersonList)(nil), "pb.PersonList")
}

func init() { proto.RegisterFile("person.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x51, 0xcd, 0x4a, 0x03, 0x31,
	0x10, 0x26, 0xd9, 0xee, 0xb6, 0x9d, 0x16, 0x91, 0x20, 0x3a, 0xf4, 0x20, 0xb1, 0xa7, 0x9c, 0x16,
	0xd4, 0x8b, 0xf4, 0xae, 0x20, 0x78, 0x90, 0xa8, 0x0f, 0x90, 0x75, 0x63, 0x1b, 0xed, 0xfe, 0x90,
	0x44, 0x71, 0xdf, 0xd6, 0x47, 0x91, 0x24, 0xad, 0xf6, 0xf6, 0xfd, 0x84, 0x99, 0x6f, 0xbe, 0xc0,
	0xbc, 0xd7, 0xd6, 0x75, 0x6d, 0xd9, 0xdb, 0xce, 0x77, 0x8c, 0xf6, 0xd5, 0x62, 0xe6, 0x7c, 0x67,
	0x87, 0x24, 0x2c, 0x7f, 0x28, 0x14, 0x8f, 0xf1, 0x05, 0x3b, 0x02, 0x6a, 0x6a, 0x24, 0x9c, 0x88,
	0x4c, 0x52, 0x53, 0x33, 0x06, 0xa3, 0x56, 0x35, 0x1a, 0x29, 0x27, 0x62, 0x2a, 0x23, 0x66, 0xc7,
	0x90, 0x39, 0xfd, 0x8d, 0x19, 0x27, 0x62, 0x22, 0x03, 0x0c, 0x8a, 0x5a, 0x6b, 0x1c, 0x71, 0x22,
	0x72, 0x19, 0x20, 0x3b, 0x81, 0xbc, 0xe9, 0x5a, 0x3d, 0x60, 0xce, 0x89, 0xa0, 0x32, 0x11, 0x76,
	0x0a, 0x85, 0xf2, 0x5e, 0xbd, 0x6e, 0xb0, 0xe0, 0x44, 0xcc, 0xe5, 0x8e, 0xb1, 0x05, 0x4c, 0xde,
	0x3b, 0xd3, 0x3e, 0x9b, 0x46, 0xe3, 0x38, 0xee, 0xfe, 0xe3, 0x21, 0x81, 0x55, 0x5e, 0xe3, 0x84,
	0x13, 0x41, 0x64, 0xc4, 0xec, 0x02, 0x8a, 0x98, 0xdf, 0xe1, 0x94, 0x67, 0x62, 0x76, 0x35, 0x2d,
	0xfb, 0xaa, 0x7c, 0x0a, 0x8a, 0xdc, 0x19, 0xec, 0x1c, 0x60, 0xa3, 0x55, 0x7d, 0xdf, 0xac, 0x5f,
	0xec, 0x16, 0x21, 0xc6, 0x3f, 0x50, 0xd8, 0x25, 0x8c, 0xdf, 0xac, 0xd1, 0x6d, 0xed, 0x70, 0x16,
	0x67, 0x9c, 0x85, 0x19, 0xa9, 0x85, 0xf2, 0x2e, 0x39, 0xb7, 0xad, 0xb7, 0x83, 0xdc, 0xbf, 0x5b,
	0xac, 0x60, 0x7e, 0x68, 0x84, 0xab, 0x3f, 0xf4, 0x10, 0xcb, 0xca, 0x65, 0x80, 0xe1, 0xea, 0x2f,
	0xb5, 0xfd, 0xdc, 0xd7, 0x95, 0xc8, 0x8a, 0xde, 0x90, 0x65, 0x09, 0x90, 0x66, 0x3f, 0x18, 0xe7,
	0x19, 0x87, 0xdc, 0x78, 0xdd, 0x38, 0x24, 0x71, 0x35, 0xfc, 0xaf, 0x96, 0xc9, 0xa8, 0x8a, 0xf8,
	0x33, 0xd7, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x57, 0x32, 0x8f, 0xba, 0x01, 0x00, 0x00,
}
